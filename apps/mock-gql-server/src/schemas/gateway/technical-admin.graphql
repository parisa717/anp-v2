"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

type GqlCreateBrandObjectType {
  """
  Status of Brand creation
  """
  status: Boolean!
}

type GqlGetBrandObjectType {
  """
  Brand ID
  """
  id: UUID!

  """
  Brand code
  """
  code: String!

  """
  Is Brand active
  """
  isActive: Boolean!
}

"""
A UUID parser
"""
scalar UUID

type GqlGetBrandsObjectType {
  """
  Brands collection
  """
  data: [GqlBrandObjectType!]!
}

type GqlBrandObjectType {
  """
  Brand ID
  """
  id: UUID!

  """
  Brand code
  """
  code: String!

  """
  Is Brand active
  """
  isActive: Boolean!
}

type GqlUpdateBrandObjectType {
  """
  Status of Brand update
  """
  status: Boolean!
}

type GqlGetAreaObjectType {
  """
  Area ID
  """
  id: UUID!

  """
  Area code
  """
  code: String!

  """
  Area name
  """
  name: String!

  """
  Is Area active
  """
  isActive: Boolean!

  """
  Address
  """
  address: GqlGetAreaAddressObjectType!
}

type GqlGetAreaAddressObjectType {
  """
  Country
  """
  country: GqlGetAreaCountryObjectType!

  """
  Postcode
  """
  postCode: String!

  """
  City
  """
  city: String!

  """
  Address (Street, house number/flat number)
  """
  address: String!
}

type GqlGetAreaCountryObjectType {
  """
  Country ID
  """
  id: UUID!

  """
  Country name
  """
  name: String!
}

type Query {
  """
  This method lists Brands
  """
  getBrands: GqlGetBrandsObjectType!

  """
  This method returns Brand based on its id
  """
  getBrand(
    """
    Brand ID
    """
    id: UUID!
  ): GqlGetBrandObjectType!

  """
  This method returns Area
  """
  getArea(
    """
    Area ID
    """
    id: UUID!
  ): GqlGetAreaObjectType

getLocations: GqlGetLocationsObjectType!

}

type Mutation {
  """
  This method creates new Brand
  """
  createBrand(brand: GqlCreateBrandInputType!): GqlCreateBrandObjectType!

  """
  This method updates Brand
  """
  updateBrand(brand: GqlUpdateBrandInputType!): GqlUpdateBrandObjectType!
}

input GqlCreateBrandInputType {
  """
  Brand code
  """
  code: String!

  """
  Is Brand active
  """
  isActive: Boolean!
}

input GqlUpdateBrandInputType {
  """
  Brand ID
  """
  id: UUID!

  """
  Brand code
  """
  code: String!

  """
  Is Brand active
  """
  isActive: Boolean!
}
type GqlGetLocationsObjectType {
  """Locations collection"""
  locations: [GqlGetLocationObjectType!]!
}

type GqlGetLocationObjectType {
  """Location ID"""
  id: UUID!

  """Location code"""
  code: String!

  """Location name"""
  name: String!

  """Is Location active"""
  isActive: Boolean!

  """Address"""
  address: GqlGetLocationAddressObjectType!

  """Area"""
  area: GqlGetLocationAreaObjectType!

  """Brand"""
  brands: [GqlGetLocationBrandObjectType!]!
}

type GqlGetLocationAddressObjectType {
  """Country"""
  country: GqlGetLocationCountryObjectType!

  """Postcode"""
  postCode: String!

  """City"""
  city: String!

  """Address (Street, house number/flat number)"""
  address: String!
}

type GqlGetLocationAreaObjectType {
  """Location Area ID"""
  id: UUID!

  """Location Area code"""
  code: String!

  """Location Area name"""
  name: String!
}

type GqlGetLocationBrandObjectType {
  """Location Brand ID"""
  id: UUID!

  """Brand code"""
  code: String!

  """Is Workshop Default"""
  isWorkshopDefault: Boolean!
}
type GqlGetLocationCountryObjectType {
  """Country ID"""
  id: UUID!

  """Country name"""
  name: String!
}
